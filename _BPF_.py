import mathfrom pprint import pprintimport __def__._0_read as rimport __def__._1_polnuyimport __def__._0_transform as tranimport __def__._1_COMP_FKM_SG as sg_fkmdef BPF(filename):    print('BPF')    name_fileS = ['data/CoefDPF/Coef_DPF9_im.txt',  'data/CoefDPF/Coef_DPF9_re.txt',                  'data/CoefDPF/Coef_DPF10_im.txt', 'data/CoefDPF/Coef_DPF10_re.txt',                  'data/CoefDPF/Coef_DPF11_im.txt', 'data/CoefDPF/Coef_DPF11_re.txt',                  'data/CoefDPF/Coef_DPF13_im.txt', 'data/CoefDPF/Coef_DPF13_re.txt',                  'data/CoefDPF/Coef_DPF21_im.txt', 'data/CoefDPF/Coef_DPF21_re.txt',                  'data/CoefDPF/Coef_DPF22_im.txt', 'data/CoefDPF/Coef_DPF22_re.txt',                  'data/CoefDPF/Coef_DPF23_im.txt', 'data/CoefDPF/Coef_DPF23_re.txt',                  'data/CoefDPF/Coef_DPF25_im.txt', 'data/CoefDPF/Coef_DPF25_re.txt',]    Coef_DPF9_im = [];    Coef_DPF9_re = []    Coef_DPF10_im = [];    Coef_DPF10_re = []    Coef_DPF11_im = [];    Coef_DPF11_re = []    Coef_DPF13_im = [];    Coef_DPF13_re = []    Coef_DPF21_im = [];    Coef_DPF21_re = []    Coef_DPF22_im = [];    Coef_DPF22_re = []    Coef_DPF23_im = [];    Coef_DPF23_re = []    Coef_DPF25_im = [];    Coef_DPF25_re = []    Coef = [Coef_DPF9_im,   Coef_DPF9_re,            Coef_DPF10_im,  Coef_DPF10_re,            Coef_DPF11_im,  Coef_DPF11_re,            Coef_DPF13_im,  Coef_DPF13_re,            Coef_DPF21_im,  Coef_DPF21_re,            Coef_DPF22_im,  Coef_DPF22_re,            Coef_DPF23_im,  Coef_DPF23_re,            Coef_DPF25_im,  Coef_DPF25_re,]    r.READ_float_fileS(name_fileS, Coef)    #pprint(Coef_DPF25_im)    '''    Coef_DPF9_im  = Coef_DPF9_im[::2];     Coef_DPF9_re = Coef_DPF9_re[::2]    Coef_DPF10_im = Coef_DPF10_im[::2];    Coef_DPF10_re = Coef_DPF10_re[::2]    Coef_DPF11_im = Coef_DPF11_im[::2];    Coef_DPF11_re = Coef_DPF11_re[::2]    Coef_DPF13_im = Coef_DPF13_im[::2];    Coef_DPF13_re = Coef_DPF13_re[::2]    Coef_DPF21_im = Coef_DPF21_im[::2];    Coef_DPF21_re = Coef_DPF21_re[::2]    Coef_DPF22_im = Coef_DPF22_im[::2];    Coef_DPF22_re = Coef_DPF22_re[::2]    Coef_DPF23_im = Coef_DPF23_im[::2];    Coef_DPF23_re = Coef_DPF23_re[::2]    '''    Coef_DPF25_im = Coef_DPF25_im[::2];    Coef_DPF25_re = Coef_DPF25_re[::2]    COMP_Coef_DPF9 = tran.in_COMP(Coef_DPF9_re, Coef_DPF9_im)    COMP_Coef_DPF10 = tran.in_COMP(Coef_DPF10_re, Coef_DPF10_im)    COMP_Coef_DPF11 = tran.in_COMP(Coef_DPF11_re, Coef_DPF11_im)    COMP_Coef_DPF13 = tran.in_COMP(Coef_DPF13_re, Coef_DPF13_im)    COMP_Coef_DPF21 = tran.in_COMP(Coef_DPF21_re, Coef_DPF21_im)    COMP_Coef_DPF22 = tran.in_COMP(Coef_DPF22_re, Coef_DPF22_im)    COMP_Coef_DPF23 = tran.in_COMP(Coef_DPF23_re, Coef_DPF23_im)    COMP_Coef_DPF25 = tran.in_COMP(Coef_DPF25_re,Coef_DPF25_im)    #pprint(COMP_Coef_DPF25)    '''строим график коэф.    import matplotlib.pyplot as plt    plt.plot(COMP_Coef_DPF9, 'b-')    plt.show()    '''    #aux = tran.from_COMP_in_RE_IM(COMP_Coef_DPF25)    COMP_DATA = __def__._1_polnuy.POLNAYA(filename)[1]    #COMP_DATA = tran.in_COMP(r.test_signal()[0::2],r.test_signal()[1::2])    #print(COMP_DATA)    _DATA = tran.from_COMP_in_RE_IM(COMP_DATA)    #_DATA = sg_fkm.SG_data(r.data_test(7),r.barker_('p7'))[0]    comp_d = tran.in_COMP(_DATA[::2],_DATA[1:-1:2])    #print(comp_d)    CountDATA = len(comp_d)    #print((CountDATA))    data_aux = []    comp_sum = ()    #coef = COMP_Coef_DPF9    n = 0    d = 25    n_25 = 25    coef = []    COMP_data_25z = []    while n_25:        n_25 -= 1        i = COMP_Coef_DPF25[n:d]        coef.append(i)        n += 25        d += 25    '''    coef = []    n_25 = 25    co = range(1,26)    while n_25:        n_25 -= 1        coef.append(co)    #print(coef)    '''    #pprint(coef[3])    #coef = r.test_coefBPF()    #pprint(coef)    for i in COMP_DATA:        for co in coef:            comp_sum = complex()            for  c in co:                #print(type(i))                comp_sum += c*i            data_aux.append(comp_sum)    #print((data_aux))    aux = tran.from_COMP_in_RE_IM(data_aux)    #print(aux)    MODUL = []    for i in data_aux:        M = abs(i)        MODUL.append(M)    #print(MODUL)    return MODUL, _DATA, auxfilename = 'data/data_EF_RI1.dat'BPF(filename)'''for i in comp_d:    comp_sum = complex()    for co in coef:        for c in co:            comp_sum += c * i        data_aux.append(comp_sum)'''